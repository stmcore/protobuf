// Code generated by protoc-gen-go. DO NOT EDIT.
// source: origin.proto

package origin

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bd150d9a096a1e7, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type OriginInfo struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Rack                 string   `protobuf:"bytes,3,opt,name=rack,proto3" json:"rack,omitempty"`
	VhostName            string   `protobuf:"bytes,4,opt,name=vhost_name,json=vhostName,proto3" json:"vhost_name,omitempty"`
	AppName              string   `protobuf:"bytes,5,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	InstanceName         string   `protobuf:"bytes,6,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	StreamName           string   `protobuf:"bytes,7,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	ChannelName          string   `protobuf:"bytes,8,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	Code                 string   `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OriginInfo) Reset()         { *m = OriginInfo{} }
func (m *OriginInfo) String() string { return proto.CompactTextString(m) }
func (*OriginInfo) ProtoMessage()    {}
func (*OriginInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bd150d9a096a1e7, []int{1}
}

func (m *OriginInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OriginInfo.Unmarshal(m, b)
}
func (m *OriginInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OriginInfo.Marshal(b, m, deterministic)
}
func (m *OriginInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OriginInfo.Merge(m, src)
}
func (m *OriginInfo) XXX_Size() int {
	return xxx_messageInfo_OriginInfo.Size(m)
}
func (m *OriginInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OriginInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OriginInfo proto.InternalMessageInfo

func (m *OriginInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *OriginInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *OriginInfo) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *OriginInfo) GetVhostName() string {
	if m != nil {
		return m.VhostName
	}
	return ""
}

func (m *OriginInfo) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *OriginInfo) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *OriginInfo) GetStreamName() string {
	if m != nil {
		return m.StreamName
	}
	return ""
}

func (m *OriginInfo) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *OriginInfo) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "origin.Empty")
	proto.RegisterType((*OriginInfo)(nil), "origin.OriginInfo")
}

func init() { proto.RegisterFile("origin.proto", fileDescriptor_2bd150d9a096a1e7) }

var fileDescriptor_2bd150d9a096a1e7 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4f, 0x03, 0x31,
	0x0c, 0x85, 0xe9, 0x71, 0xbd, 0x1f, 0xee, 0x95, 0xc1, 0x0c, 0x1c, 0x95, 0x10, 0x50, 0x96, 0x4e,
	0x1d, 0x60, 0x65, 0xab, 0x10, 0x62, 0x01, 0x89, 0x85, 0x11, 0x85, 0x10, 0x68, 0x04, 0x67, 0x47,
	0x97, 0x80, 0xc4, 0xcc, 0x3f, 0x8e, 0xce, 0x6e, 0x61, 0x60, 0xb3, 0xbf, 0xf7, 0xc5, 0x8a, 0x1e,
	0x34, 0xdc, 0xfb, 0x57, 0x4f, 0xcb, 0xd0, 0x73, 0x62, 0x2c, 0x74, 0x9b, 0x97, 0x30, 0xbe, 0xea,
	0x42, 0xfa, 0x9a, 0x7f, 0x67, 0x00, 0x77, 0xc2, 0x6e, 0xe8, 0x85, 0x71, 0x06, 0xd5, 0x9a, 0x63,
	0x22, 0xd3, 0xb9, 0x76, 0x74, 0x32, 0x5a, 0xd4, 0xf7, 0xbf, 0x3b, 0xee, 0x41, 0xe6, 0x43, 0x9b,
	0x09, 0xcd, 0x7c, 0x40, 0x84, 0xbc, 0x37, 0xf6, 0xad, 0xdd, 0x15, 0x22, 0x33, 0x1e, 0x01, 0x7c,
	0x0e, 0x0f, 0x1e, 0xe5, 0x42, 0x2e, 0x49, 0x2d, 0xe4, 0x76, 0x38, 0x71, 0x08, 0x95, 0x09, 0x41,
	0xc3, 0xb1, 0x84, 0xa5, 0x09, 0x41, 0xa2, 0x33, 0x98, 0x7a, 0x8a, 0xc9, 0x90, 0x75, 0x9a, 0x17,
	0x92, 0x37, 0x5b, 0x28, 0xd2, 0x31, 0x4c, 0x62, 0xea, 0x9d, 0xe9, 0x54, 0x29, 0x45, 0x01, 0x45,
	0x22, 0x9c, 0x42, 0x63, 0xd7, 0x86, 0xc8, 0xbd, 0xab, 0x51, 0x89, 0x31, 0xd9, 0x30, 0x51, 0x10,
	0x72, 0xcb, 0xcf, 0xae, 0xad, 0xf5, 0xdb, 0xc3, 0x7c, 0xfe, 0x00, 0x07, 0x5a, 0x42, 0x5c, 0x31,
	0x91, 0xb3, 0xc9, 0x33, 0xad, 0xf8, 0x83, 0x52, 0xc4, 0x4b, 0xd8, 0xbf, 0x76, 0xe9, 0x1f, 0xc6,
	0xe5, 0xa6, 0xd7, 0xbf, 0xf2, 0x66, 0xd3, 0x2d, 0xd3, 0x6a, 0x77, 0x16, 0xa3, 0xa7, 0x42, 0x6a,
	0xbf, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0xff, 0x5a, 0x1a, 0x32, 0x86, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OriginsConnectionCountsClient is the client API for OriginsConnectionCounts service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OriginsConnectionCountsClient interface {
	GetConnectionCounts(ctx context.Context, opts ...grpc.CallOption) (OriginsConnectionCounts_GetConnectionCountsClient, error)
}

type originsConnectionCountsClient struct {
	cc *grpc.ClientConn
}

func NewOriginsConnectionCountsClient(cc *grpc.ClientConn) OriginsConnectionCountsClient {
	return &originsConnectionCountsClient{cc}
}

func (c *originsConnectionCountsClient) GetConnectionCounts(ctx context.Context, opts ...grpc.CallOption) (OriginsConnectionCounts_GetConnectionCountsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OriginsConnectionCounts_serviceDesc.Streams[0], "/origin.OriginsConnectionCounts/GetConnectionCounts", opts...)
	if err != nil {
		return nil, err
	}
	x := &originsConnectionCountsGetConnectionCountsClient{stream}
	return x, nil
}

type OriginsConnectionCounts_GetConnectionCountsClient interface {
	Send(*OriginInfo) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type originsConnectionCountsGetConnectionCountsClient struct {
	grpc.ClientStream
}

func (x *originsConnectionCountsGetConnectionCountsClient) Send(m *OriginInfo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *originsConnectionCountsGetConnectionCountsClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OriginsConnectionCountsServer is the server API for OriginsConnectionCounts service.
type OriginsConnectionCountsServer interface {
	GetConnectionCounts(OriginsConnectionCounts_GetConnectionCountsServer) error
}

// UnimplementedOriginsConnectionCountsServer can be embedded to have forward compatible implementations.
type UnimplementedOriginsConnectionCountsServer struct {
}

func (*UnimplementedOriginsConnectionCountsServer) GetConnectionCounts(srv OriginsConnectionCounts_GetConnectionCountsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetConnectionCounts not implemented")
}

func RegisterOriginsConnectionCountsServer(s *grpc.Server, srv OriginsConnectionCountsServer) {
	s.RegisterService(&_OriginsConnectionCounts_serviceDesc, srv)
}

func _OriginsConnectionCounts_GetConnectionCounts_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OriginsConnectionCountsServer).GetConnectionCounts(&originsConnectionCountsGetConnectionCountsServer{stream})
}

type OriginsConnectionCounts_GetConnectionCountsServer interface {
	SendAndClose(*Empty) error
	Recv() (*OriginInfo, error)
	grpc.ServerStream
}

type originsConnectionCountsGetConnectionCountsServer struct {
	grpc.ServerStream
}

func (x *originsConnectionCountsGetConnectionCountsServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *originsConnectionCountsGetConnectionCountsServer) Recv() (*OriginInfo, error) {
	m := new(OriginInfo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OriginsConnectionCounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "origin.OriginsConnectionCounts",
	HandlerType: (*OriginsConnectionCountsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetConnectionCounts",
			Handler:       _OriginsConnectionCounts_GetConnectionCounts_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "origin.proto",
}
